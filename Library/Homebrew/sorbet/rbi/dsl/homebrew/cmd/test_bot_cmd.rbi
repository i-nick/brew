# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Homebrew::Cmd::TestBotCmd`.
# Please instead update this file by running `bin/tapioca dsl Homebrew::Cmd::TestBotCmd`.


class Homebrew::Cmd::TestBotCmd
  sig { returns(Homebrew::Cmd::TestBotCmd::Args) }
  def args; end
end

class Homebrew::Cmd::TestBotCmd::Args < Homebrew::CLI::Args
  sig { returns(T.nilable(T::Array[String])) }
  def added_formulae; end

  sig { returns(T::Boolean) }
  def build_dependents_from_source?; end

  sig { returns(T::Boolean) }
  def build_from_source?; end

  sig { returns(T::Boolean) }
  def cleanup?; end

  sig { returns(T::Boolean) }
  def concurrent_downloads?; end

  sig { returns(T.nilable(T::Array[String])) }
  def deleted_formulae; end

  sig { returns(T::Boolean) }
  def dry_run?; end

  sig { returns(T::Boolean) }
  def fail_fast?; end

  sig { returns(T.nilable(String)) }
  def git_email; end

  sig { returns(T.nilable(String)) }
  def git_name; end

  sig { returns(T::Boolean) }
  def junit?; end

  sig { returns(T::Boolean) }
  def keep_old?; end

  sig { returns(T::Boolean) }
  def local?; end

  sig { returns(T::Boolean) }
  def only_bottles_fetch?; end

  sig { returns(T::Boolean) }
  def only_cleanup_after?; end

  sig { returns(T::Boolean) }
  def only_cleanup_before?; end

  sig { returns(T::Boolean) }
  def only_formulae?; end

  sig { returns(T::Boolean) }
  def only_formulae_dependents?; end

  sig { returns(T::Boolean) }
  def only_formulae_detect?; end

  sig { returns(T::Boolean) }
  def only_json_tab?; end

  sig { returns(T::Boolean) }
  def only_setup?; end

  sig { returns(T::Boolean) }
  def only_tap_syntax?; end

  sig { returns(T::Boolean) }
  def publish?; end

  sig { returns(T.nilable(String)) }
  def root_url; end

  sig { returns(T::Boolean) }
  def skip_checksum_only_audit?; end

  sig { returns(T::Boolean) }
  def skip_dependents?; end

  sig { returns(T::Boolean) }
  def skip_livecheck?; end

  sig { returns(T::Boolean) }
  def skip_new?; end

  sig { returns(T::Boolean) }
  def skip_new_strict?; end

  sig { returns(T::Boolean) }
  def skip_online_checks?; end

  sig { returns(T::Boolean) }
  def skip_recursive_dependents?; end

  sig { returns(T::Boolean) }
  def skip_relocation?; end

  sig { returns(T::Boolean) }
  def skip_revision_audit?; end

  sig { returns(T::Boolean) }
  def skip_setup?; end

  sig { returns(T::Boolean) }
  def skip_stable_version_audit?; end

  sig { returns(T.nilable(T::Array[String])) }
  def skipped_or_failed_formulae; end

  sig { returns(T::Boolean) }
  def stable?; end

  sig { returns(T::Boolean) }
  def test_default_formula?; end

  sig { returns(T.nilable(T::Array[String])) }
  def tested_formulae; end

  sig { returns(T.nilable(T::Array[String])) }
  def testing_formulae; end
end
